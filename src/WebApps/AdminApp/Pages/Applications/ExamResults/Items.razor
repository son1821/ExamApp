@page "/app/examresults"
@using AdminApp.Services
@using Examination.Shared.ExamResults

@inject ICategoryService CategoryService
@inject IDialogService DialogService
@inject IExamResultService ExamResultService
@inject ISnackbar Snackbar
@inject NavigationManager NavigationManager

<MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Exam Results  List</MudText>
<MudGrid>
    <MudItem xs="12" sm="12" md="12">
        <MudCard Elevation="25" Style="height:100%;">
            <MudCardContent Class="px-0">
                <MudGrid>
                    <MudItem xs="12" sm="12" md="12">
                        <div class="pa-3">
                            <div class="d-flex" style="align-items: baseline;">
                                <MudTextField @bind-Value="@SearchModel.keyWork"
                                              Immediate="true"
                                              Placeholder="Enter content..."
                                              Clearable="true"
                                              Class="mt-0 user-search-text"
                                              AdornmentIcon="@Icons.Material.Filled.Search" />

                                <MudButton ButtonType="ButtonType.Button" Color="Color.Success" OnClick="HandleSearch">
                                    Search
                                </MudButton>
                            </div>
                        </div>
                    </MudItem>
                    <MudItem xs="12" md="12">
                        <MudTable Items="@Elements" FixedHeader="true" FixedFooter="false" Height="400px">
                            <HeaderContent>
                                <MudTh>ExamName</MudTh>
                                <MudTh>Date Start</MudTh>
                                <MudTh>Date Finished</MudTh>
                                <MudTh>Questions</MudTh>
                                <MudTh>Correct</MudTh>
                                <MudTh>Result</MudTh>
                                <MudTh></MudTh>
                               
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Name">@context.ExamTitle</MudTd>
                                <MudTd DataLabel="Name">@context.ExamStartDate</MudTd>
                                <MudTd DataLabel="Name">@context.ExamFinishDate</MudTd>
                                <MudTd DataLabel="Name">@context.QuestionResults.Count</MudTd>
                                <MudTd DataLabel="Name">@context.QuestionResults.Count(x => x.Result == true)</MudTd>
                                <MudTd DataLabel="Name">@(context.Passed == true ? "Passed":"Failed")</MudTd>
                                <MudTd>
                                    <MudIconButton Icon="@Icons.Material.Filled.Visibility" OnClick="()=>ViewDetail(context)" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" Class="ma-2">

                                    </MudIconButton>
                                </MudTd>
                            </RowTemplate>

                            <PagerContent>
                                <Pagination MetaData="MetaData" Spread="5" SelectedPage="SelectedPage"></Pagination>
                            </PagerContent>
                        </MudTable>
                    </MudItem>
                </MudGrid>


            </MudCardContent>
        </MudCard>
    </MudItem>
</MudGrid>

<MudOverlay Visible="loading" DarkBackground="true" Absolute="true">
    <MudProgressCircular Color="Color.Secondary" Indeterminate="true" />
</MudOverlay>

@code {
    [CascadingParameter]
    MudDialogInstance MudDialog { get; set; } = new MudDialogInstance();

    [CascadingParameter]
    private Error Error { set; get; } = new Error();

    public bool loading = false;

    private string DeleteId { set; get; } = string.Empty;
    private List<ExamResultDto> Elements = new List<ExamResultDto>();
    public MetaData MetaData { get; set; } = new MetaData();

    private ExamResultSearch SearchModel = new ExamResultSearch();



    protected override async Task OnInitializedAsync()
    {
        await FillData();
    
    }

    public async Task SearchData(ExamResultSearch searchModel)
    {
        SearchModel = searchModel;
        await FillData();
    }



    private async Task FillData()
    {
        loading = true;
        try
        {
            var pagingResponse = await ExamResultService.GetExamResultsPagingAsync(SearchModel);
            if (pagingResponse.IsSuccessed)
            {
                Elements = pagingResponse.ResultObj.Items;
                MetaData = pagingResponse.ResultObj.MetaData;
            }

            loading = false;
        }
        catch (Exception ex)
        {
            Error.ProcessError(ex);
            loading = false;
        }

    }
    private void ViewDetail(ExamResultDto item)
    {
        var parameters = new DialogParameters
            {
                ["Questions"] = item.QuestionResults,
            };

        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraSmall };
        var dialog = DialogService.Show<QuestionDialog>("Show Question Answers", parameters, options);
    }

    private async Task SelectedPage(int page)
    {
        SearchModel.PageNumber = page;
        await FillData();
    }

    public async Task HandleSearch()
    {
        await FillData();
    }
} 